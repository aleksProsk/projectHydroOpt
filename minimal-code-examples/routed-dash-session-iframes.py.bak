#Anmerkung:
#Lasse die dash-app unter url /dash laufen und den rest anderswo

# start in linux via
# export FLASK_APP=filename.py
# flask run

# start in windows via
# set FLASK_APP=filename.py
# flask run

from flask import Flask, request, make_response, render_template, redirect
from flask_optional_routes import OptionalRoutes
from dash import Dash
from dash.dependencies import Input, Output, Event, State
import dash_html_components as html
import dash_core_components as dcc
import Cookie

flask_app = Flask(__name__)
dash_app = Dash(__name__, server=flask_app, url_base_pathname='/dash/')

colors = {
    'background': '#AB1111',
    'text': '#7FDBFF'
}

@flask_app.route('/')
def route_main_page():
	return render_template('routed-dash-session-iframes.html')

@flask_app.route('/setcookie', methods = ['POST', 'GET'])
def setcookie():
	if request.method == 'POST':
		user = request.form['nm']   
		resp = make_response(render_template('routed-dash-session-iframes.html'))
		resp.set_cookie('username', user)   
	return resp	
	
dash_app.layout = html.Div(id='universe', style={'backgroundColor': colors['background']}, children=[
	dcc.Location(id='url', refresh=False),
	html.Div(id='main-page', style={'backgroundColor': colors['background']}, children=[
		html.Div(id='page-header', style={'backgroundColor': '#1B1111'}, children=[
			html.P(children=["Username: ", dcc.Input(type='text', id='username', placeholder='username')]),
			html.P(children=["Password: ", dcc.Input(type='password', id='password', placeholder='password')]),
			html.Button(id='submit-button', n_clicks=0, children='Login')
		]),
		html.Div(id='page-content', style={'backgroundColor': colors['background']}, children=[
			dcc.Location(id='url2', refresh=False)			
		])
	])
])


@dash_app.callback(
	Output('main-page', 'children'), 
	[Input('url', 'pathname'), Input('submit-button', 'n_clicks')],
	[State('username', 'value'), State('password', 'value')])
def display_page(pathname, n_clicks, username, password):
	isLoginAttempt = (n_clicks > 0)
	usernameFromCookie = request.cookies.get('username')
	isLoggedIn = usernameFromCookie is not None
	if not isLoggedIn and isLoginAttempt:
		try_to_login(username, password)
	return dash_router(pathname)
	
def try_to_login(username, password):
	print 'trying to login with the following credentials:'
	print username
	print password
	resp = make_response(redirect('/'))
	resp.set_cookie('username', username)
	
def dash_router(pathname):
	username = request.cookies.get('username')
	print username
	isLoggedIn = username is not None
	pageContent = [
		html.H1(
			children='Dash routing',
			style={
				'textAlign': 'center',
				'color': colors['text']
			}
		),
		html.H2(children=pathname),
		html.H1(children='Username'),
		html.H2(children=username)			
	]
	
	children=[
		html.Div(id='page-header', style={'backgroundColor': '#1B1111'}, children=[
			html.P(children=["Username: ", dcc.Input(type='text', id='username', placeholder='username')]),
			html.P(children=["Password: ", dcc.Input(type='password', id='password', placeholder='password')]),
			html.Button(id='submit-button', children='Login')
		]),
		html.Div(id='page-content', style={'backgroundColor': colors['background']}, children=pageContent)
	]
	
	return children	